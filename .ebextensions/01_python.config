option_settings:
  aws:elasticbeanstalk:application:environment:
    "DJANGO_SETTINGS_MODULE" : "djangoproject.settings.settings"
    "PYTHONPATH": "/opt/python/current/app/djangoprojectd:$PYTHONPATH"
  aws:elasticbeanstalk:container:python:
    WSGIPath: djangoproject/wsgi.py
    NumProcesses: 3
    NumThreads: 20
  aws:elasticbeanstalk:container:python:staticfiles:
    "/static/": "www/static/"
  aws:autoscaling:asg:
    Availability Zones: Any
    Cooldown: 720
    MaxSize: 3
    MinSize: 1
  aws:autoscaling:launchconfiguration:
    EC2KeyName: LW-INBO-VESPAWATCH
    MonitoringInterval: "5 minute"
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role-vespawatch
  aws:elasticbeanstalk:cloudwatch:logs:  # pushes default log streams to cloudwatch, not custom once
    StreamLogs: true
    DeleteOnTerminate: true
    RetentionInDays: 14
  aws:elasticbeanstalk:environment:
    EnvironmentType: LoadBalanced
    LoadBalancerType: classic
  aws:ec2:vpc:
    AssociatePublicIpAddress: false
    ELBScheme: internal
  aws:rds:dbinstance:
    DBAllocatedStorage: 5
    DBEngine: postgres
    DBName: vespawatch

commands:
  01_gdal_install:
    command: "sudo yum --enablerepo=epel -y install gdal-devel gdal proj"
  02_node_install:
    command: "sudo yum -y install epel-release && curl --silent --location https://rpm.nodesource.com/setup_10.x | sudo bash - && sudo yum -y install nodejs"
  03_change_log_permissions:  # make sure new files get defined group
    command: chmod g+s /opt/python/log
  04_change_log_owner:   # change group of folder to wsgi
    command: chown wsgi:wsgi /opt/python/log
  05_change_default_owner:   # let files have group read and write options
    command: setfacl -d -m g::rw /opt/python/log

container_commands:
  01_migrate:
    command: "source /opt/python/run/venv/bin/activate && python manage.py migrate --noinput"
    leader_only: true

  02_createsu:
    command: "source /opt/python/run/venv/bin/activate && python manage.py create_su"
    leader_only: true

  03_npm_build:
    command: 'npm config set strict-ssl false && npm install && npm run build:all'

  04_collectstatic:
    command: "source /opt/python/run/venv/bin/activate && python manage.py collectstatic --noinput"

Resources:
   AWSEBAutoScalingGroup:
     Type: "AWS::AutoScaling::AutoScalingGroup"
     Properties:
       HealthCheckType: "ELB"
       HealthCheckGracePeriod: "600"

files:
  "/opt/elasticbeanstalk/tasks/taillogs.d/django.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      /opt/python/log/django.log
  "/etc/awslogs/config/django.conf":
    mode: "000600"
    owner: root
    group: root
    content: |
      [/opt/python/log/django.log]
      log_group_name = `{"Fn::Join":["/", ["/aws/elasticbeanstalk", { "Ref":"AWSEBEnvironmentName" }, "opt/python/log/django.log"]]}`
      log_stream_name = {instance_id}
      file = /opt/python/log/django.log*
