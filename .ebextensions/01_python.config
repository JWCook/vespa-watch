option_settings:    
  aws:elasticbeanstalk:application:environment:
    "DJANGO_SETTINGS_MODULE" : "djangoproject.settings.settings"
    "PYTHONPATH": "/opt/python/current/app/djangoprojectd:$PYTHONPATH"
    PATH: /usr/local/gdal/bin:$PATH
    LD_LIBRARY_PATH: /usr/local/proj4/lib:/usr/local/geos/lib:/usr/local/gdal/lib:$LD_LIBRARY_PATH
    GDAL_DATA: /usr/local/gdal/share/gdal
    GDAL_LIBRARY_PATH: /usr/local/gdal/lib/libgdal.so
  aws:elasticbeanstalk:container:python:
    WSGIPath: djangoproject/wsgi.py
    NumProcesses: 3
    NumThreads: 20
  aws:elasticbeanstalk:container:python:staticfiles:
    "/static/": "www/static/"
  aws:autoscaling:asg:
    Availability Zones: Any
    Cooldown: 720
    MaxSize: 3
    MinSize: 1
  aws:autoscaling:launchconfiguration:
    EC2KeyName: LW-INBO-VESPAWATCH
    MonitoringInterval: "5 minute"
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role-vespawatch
  aws:elasticbeanstalk:cloudwatch:logs:  # pushes default log streams to cloudwatch, not custom once
    StreamLogs: true
    DeleteOnTerminate: true
    RetentionInDays: 14
  aws:elasticbeanstalk:environment:
    EnvironmentType: LoadBalanced
    LoadBalancerType: classic
  aws:ec2:vpc:
    AssociatePublicIpAddress: false
    ELBScheme: internal
  aws:rds:dbinstance:
    DBAllocatedStorage: 5
    DBEngine: postgres
    DBName: vespawatch

commands:
  01_install_geos:
    command: |
      sudo aws s3 cp s3://vespawatch-prebuild-geospatial-libs-pr/geos-3.7.1.tar.gz .
      sudo mkdir -p /usr/local/geos
      sudo tar -xvf geos-3.7.1.tar.gz -C /usr/local/geos
      sudo rm -f geos-3.7.1.tar.gz
    test: "[ ! -d /usr/local/geos ]"
  02_install_proj4:
    command: |
      sudo aws s3 cp s3://vespawatch-prebuild-geospatial-libs-pr/proj4-4.9.3.tar.gz .
      sudo mkdir -p /usr/local/proj4
      sudo tar -xvf proj4-4.9.3.tar.gz -C /usr/local/proj4
      sudo rm -f proj4-4.9.3.tar.gz
    test: "[ ! -d /usr/local/proj4 ]"
  03_install_gdal:
    command: |
      sudo aws s3 cp s3://vespawatch-prebuild-geospatial-libs-pr/gdal-2.3.3.tar.gz .
      sudo mkdir -p /usr/local/gdal
      sudo tar -xvf gdal-2.3.3.tar.gz -C /usr/local/gdal
      sudo rm -f gdal-2.3.3.tar.gz
    test: "[ ! -d /usr/local/gdal ]"
  04_node_install:
    command: "nvm install node"

container_commands:
  01_migrate:
    command: "source /opt/python/run/venv/bin/activate && python manage.py migrate --noinput"
    leader_only: true

  02_createsu:
    command: "source /opt/python/run/venv/bin/activate && python manage.py create_su"
    leader_only: true

  03_compilemessages:
    command: "source /opt/python/run/venv/bin/activate && python manage.py compilemessages"

  04_npm_build:
    command: "npm config set strict-ssl false && npm install && npm run build:all"

  05_collectstatic:
    command: "source /opt/python/run/venv/bin/activate && python manage.py collectstatic --noinput"

Resources:
   AWSEBAutoScalingGroup:
     Type: "AWS::AutoScaling::AutoScalingGroup"
     Properties:
       HealthCheckType: "ELB"
       HealthCheckGracePeriod: "600"