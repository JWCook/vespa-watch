# Generated by Django 2.1.2 on 2018-12-03 08:29

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import vespawatch.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FirefightersZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mpolygon', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='InatObsToDelete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inaturalist_id', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originates_in_vespawatch', models.BooleanField(default=True, help_text='The observation was first created in VespaWatch, not iNaturalist')),
                ('address', models.CharField(blank=True, max_length=255)),
                ('observation_time', models.DateTimeField(verbose_name='Observation date')),
                ('comments', models.TextField(blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('inaturalist_id', models.BigIntegerField(blank=True, null=True)),
                ('inaturalist_species', models.CharField(blank=True, max_length=100, null=True)),
                ('observer_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('observer_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('observer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('observer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('observer_is_beekeeper', models.NullBooleanField()),
                ('individual_count', models.IntegerField(blank=True, null=True)),
                ('behaviour', models.CharField(blank=True, choices=[('FO', 'Fouraging'), ('HU', 'Hunting at hive'), ('FL', 'At flower'), ('OT', 'Other')], max_length=2, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=vespawatch.models.IndividualPicture.get_file_path)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='vespawatch.Individual')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.CharField(choices=[('FD', 'Full destruction, no debris'), ('PD', 'Partial destruction/debris left'), ('ND', 'Empty nest, nothing done')], max_length=2)),
                ('action_time', models.DateTimeField()),
                ('person_name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Nest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originates_in_vespawatch', models.BooleanField(default=True, help_text='The observation was first created in VespaWatch, not iNaturalist')),
                ('address', models.CharField(blank=True, max_length=255)),
                ('observation_time', models.DateTimeField(verbose_name='Observation date')),
                ('comments', models.TextField(blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('inaturalist_id', models.BigIntegerField(blank=True, null=True)),
                ('inaturalist_species', models.CharField(blank=True, max_length=100, null=True)),
                ('observer_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('observer_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('observer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('observer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('observer_is_beekeeper', models.NullBooleanField()),
                ('size', models.CharField(blank=True, choices=[('LESS_25_CM', 'Less than 25cm'), ('MORE_25_CM', 'More than 25cm')], max_length=50)),
                ('height', models.CharField(blank=True, choices=[('BELOW_4_M', 'Below 4 meters'), ('BELOW_4_M', 'Above 4 meters')], max_length=50)),
                ('duplicate_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vespawatch.Nest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NestPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=vespawatch.models.NestPicture.get_file_path)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='vespawatch.Nest')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vespawatch.FirefightersZone')),
            ],
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('vernacular_name', models.CharField(blank=True, max_length=100)),
                ('vernacular_name_nl', models.CharField(blank=True, max_length=100, null=True)),
                ('vernacular_name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('inaturalist_push_taxon_id', models.BigIntegerField(blank=True, help_text="When pushing an observation to iNaturalist, we'll use this taxon_id", null=True)),
                ('inaturalist_pull_taxon_ids', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), blank=True, help_text='When pulling observations from iNaturalist, reconcile according to those IDs.', null=True, size=None)),
                ('identification_picture_individual', models.ImageField(null=True, upload_to=vespawatch.models.Taxon.get_file_path)),
                ('identification_picture_nest', models.ImageField(null=True, upload_to=vespawatch.models.Taxon.get_file_path)),
                ('identification_priority', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'taxa',
            },
        ),
        migrations.AddField(
            model_name='nest',
            name='taxon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vespawatch.Taxon'),
        ),
        migrations.AddField(
            model_name='nest',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vespawatch.FirefightersZone'),
        ),
        migrations.AddField(
            model_name='managementaction',
            name='nest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vespawatch.Nest'),
        ),
        migrations.AddField(
            model_name='individual',
            name='nest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vespawatch.Nest'),
        ),
        migrations.AddField(
            model_name='individual',
            name='taxon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vespawatch.Taxon'),
        ),
        migrations.AddField(
            model_name='individual',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vespawatch.FirefightersZone'),
        ),
    ]
